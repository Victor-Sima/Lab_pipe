import { Injectable } from '@nestjs/common';
import { User } from './user.interface';

@Injectable()
export class UsersService {
  private users: User[] = [
    {
      id: 1,
      name: 'victor',
      age: 25,
      weight: 70,
      height: 175,
      bloodType: 'A+',
      gender: 'Male',
      countryOfOrigin: 'Romania',
      countryOfResidence: 'Romania',
    },
    {
      id: 2,
      name: 'maria',
      age: 30,
      weight: 60,
      height: 165,
      bloodType: 'B-',
      gender: 'Female',
      countryOfOrigin: 'Romania',
      countryOfResidence: 'Romania',
    },
    {
      id: 3,
      name: 'ion',
      age: 35,
      weight: 80,
      height: 180,
      bloodType: 'O+',
      gender: 'Male',
      countryOfOrigin: 'Romania',
      countryOfResidence: 'Romania',
    },
    {
      id: 4,
      name: 'ana',
      age: 28,
      weight: 55,
      height: 160,
      bloodType: 'AB+',
      gender: 'Female',
      countryOfOrigin: 'Moldova',
      countryOfResidence: 'Romania',
    },
    {
      id: 5,
      name: 'alex',
      age: 22,
      weight: 75,
      height: 178,
      bloodType: 'A-',
      gender: 'Male',
      countryOfOrigin: 'Ucraina',
      countryOfResidence: 'Romania',
    },
    {
      id: 6,
      name: 'elena',
      age: 27,
      weight: 58,
      height: 168,
      bloodType: 'B+',
      gender: 'Female',
      countryOfOrigin: 'Bulgaria',
      countryOfResidence: 'Bulgaria',
    },
    {
      id: 7,
      name: 'mihai',
      age: 40,
      weight: 85,
      height: 185,
      bloodType: 'O-',
      gender: 'Male',
      countryOfOrigin: 'Romania',
      countryOfResidence: 'Germania',
    },
    {
      id: 8,
      name: 'cristina',
      age: 24,
      weight: 62,
      height: 170,
      bloodType: 'A+',
      gender: 'Female',
      countryOfOrigin: 'Italia',
      countryOfResidence: 'Italia',
    },
    {
      id: 9,
      name: 'daniel',
      age: 32,
      weight: 78,
      height: 182,
      bloodType: 'B-',
      gender: 'Male',
      countryOfOrigin: 'Spania',
      countryOfResidence: 'Spania',
    },
    {
      id: 10,
      name: 'sofia',
      age: 26,
      weight: 56,
      height: 162,
      bloodType: 'AB-',
      gender: 'Female',
      countryOfOrigin: 'Grecia',
      countryOfResidence: 'Grecia',
    },
    {
      id: 11,
      name: 'andrei',
      age: 29,
      weight: 72,
      height: 176,
      bloodType: 'O+',
      gender: 'Male',
      countryOfOrigin: 'Romania',
      countryOfResidence: 'Franta',
    },
    {
      id: 12,
      name: 'ioana',
      age: 31,
      weight: 64,
      height: 172,
      bloodType: 'A-',
      gender: 'Female',
      countryOfOrigin: 'Ungaria',
      countryOfResidence: 'Ungaria',
    },
    {
      id: 13,
      name: 'gabriel',
      age: 23,
      weight: 68,
      height: 174,
      bloodType: 'B+',
      gender: 'Male',
      countryOfOrigin: 'Polonia',
      countryOfResidence: 'Polonia',
    },
    {
      id: 14,
      name: 'lara',
      age: 33,
      weight: 59,
      height: 166,
      bloodType: 'O-',
      gender: 'Female',
      countryOfOrigin: 'Cehia',
      countryOfResidence: 'Cehia',
    },
    {
      id: 15,
      name: 'stefan',
      age: 38,
      weight: 82,
      height: 188,
      bloodType: 'AB+',
      gender: 'Male',
      countryOfOrigin: 'Slovacia',
      countryOfResidence: 'Slovacia',
    },
    {
      id: 16,
      name: 'bianca',
      age: 21,
      weight: 54,
      height: 158,
      bloodType: 'A+',
      gender: 'Female',
      countryOfOrigin: 'Austria',
      countryOfResidence: 'Austria',
    },
    {
      id: 17,
      name: 'radu',
      age: 36,
      weight: 79,
      height: 181,
      bloodType: 'B-',
      gender: 'Male',
      countryOfOrigin: 'Serbia',
      countryOfResidence: 'Serbia',
    },
    {
      id: 18,
      name: 'diana',
      age: 25,
      weight: 61,
      height: 169,
      bloodType: 'O+',
      gender: 'Female',
      countryOfOrigin: 'Croatia',
      countryOfResidence: 'Croatia',
    },
  ];

  findAll(): User[] {
    return this.users;
  }

  findByName(name: string): User[] {
    return this.users.filter((user) =>
      user.name.toLowerCase().includes(name.toLowerCase()),
    );
  }
}
